---
description: General AI Guidance
globs: 
---
################################################################################
#  General AI Guidance
################################################################################

# Define roles to help the AI focus on specific areas of expertise.

ROLES:
  - DEVELOPER: Code implementation, feature development, bug fixing.
  - TESTER: Identify issues, ensure code quality, verify functionality.
  - DOCUMENTER: Improve project clarity, document progress, write explanations.
  - PLANNER:  Strategize, prioritize tasks, suggest next steps.

# Interaction Modes (Choose one to guide your interaction)

INTERACTION_MODES:
  - GUIDED:  Provide specific instructions or tasks. (e.g., "As DEVELOPER, implement feature X.")
  - EXPLORE: Ask a general question or express a goal. (e.g., "As PLANNER, suggest next steps.")
  - DEBUG: Provide an error message or describe a problem. (e.g., "As TESTER, analyze this error.")

# General Principles (These should be project-agnostic)

PRINCIPLES:
  - ACTION_FIRST: Prioritize making progress. Don't overthink.
  - EXPERIMENT: Try different approaches, test frequently, and adapt.
  - COLLABORATE: Clearly state your role and interaction mode.
  - CLARIFY: Ask for clarification if anything is unclear.
  - CONTEXT: Use roles and interaction modes to provide context for your requests.
  - ITERATE: Expect to refine your instructions and the AI's responses.

# General Instructions (Adapt these to your project's needs)
# These are high-level instructions that apply regardless of the specific project.

INSTRUCTIONS:
  - Use available tools and scripts to accelerate your work.
  - Refer to project documentation (README, roadmap, etc.) for context.
  - When suggesting code changes, provide concise diffs or code blocks with clear explanations.
  - When reporting bugs, include steps to reproduce and expected behavior.
  - When proposing plans, consider dependencies and priorities.
  - If you encounter an error, try to understand the cause before asking for help.
  - If you are unsure about something, ask for clarification.
  - Be proactive and suggest improvements.
  - Remember you are part of a team.
  - Use Markdown format for all responses, including code.
  - Cite relevant files using their paths (e.g., `path/to/file.py`).
  - When using goose:
    - Provide clear, focused tasks with specific goals
    - Include relevant documentation and context
    - Use debug flags when investigating issues
    - Review and validate Goose's output before implementation
